

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Jun 04 15:02:53 2025

Microchip MPLAB XC8 C Compiler v3.00 (Pro license) build 20241204225717 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,space=0,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x5E,2
    13     0000                     
    14                           ; Generated 26/03/2025 GMT
    15                           ; 
    16                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC12F675 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     GPIO            equ	5	;# 
    62     000A                     PCLATH          equ	10	;# 
    63     000B                     INTCON          equ	11	;# 
    64     000C                     PIR1            equ	12	;# 
    65     000E                     TMR1            equ	14	;# 
    66     000E                     TMR1L           equ	14	;# 
    67     000F                     TMR1H           equ	15	;# 
    68     0010                     T1CON           equ	16	;# 
    69     0019                     CMCON           equ	25	;# 
    70     001E                     ADRESH          equ	30	;# 
    71     001F                     ADCON0          equ	31	;# 
    72     0081                     OPTION_REG      equ	129	;# 
    73     0085                     TRISIO          equ	133	;# 
    74     008C                     PIE1            equ	140	;# 
    75     008E                     PCON            equ	142	;# 
    76     0090                     OSCCAL          equ	144	;# 
    77     0095                     WPU             equ	149	;# 
    78     0096                     IOC             equ	150	;# 
    79     0096                     IOCB            equ	150	;# 
    80     0099                     VRCON           equ	153	;# 
    81     009A                     EEDATA          equ	154	;# 
    82     009A                     EEDAT           equ	154	;# 
    83     009B                     EEADR           equ	155	;# 
    84     009C                     EECON1          equ	156	;# 
    85     009D                     EECON2          equ	157	;# 
    86     009E                     ADRESL          equ	158	;# 
    87     009F                     ANSEL           equ	159	;# 
    88     0000                     INDF            equ	0	;# 
    89     0001                     TMR0            equ	1	;# 
    90     0002                     PCL             equ	2	;# 
    91     0003                     STATUS          equ	3	;# 
    92     0004                     FSR             equ	4	;# 
    93     0005                     GPIO            equ	5	;# 
    94     000A                     PCLATH          equ	10	;# 
    95     000B                     INTCON          equ	11	;# 
    96     000C                     PIR1            equ	12	;# 
    97     000E                     TMR1            equ	14	;# 
    98     000E                     TMR1L           equ	14	;# 
    99     000F                     TMR1H           equ	15	;# 
   100     0010                     T1CON           equ	16	;# 
   101     0019                     CMCON           equ	25	;# 
   102     001E                     ADRESH          equ	30	;# 
   103     001F                     ADCON0          equ	31	;# 
   104     0081                     OPTION_REG      equ	129	;# 
   105     0085                     TRISIO          equ	133	;# 
   106     008C                     PIE1            equ	140	;# 
   107     008E                     PCON            equ	142	;# 
   108     0090                     OSCCAL          equ	144	;# 
   109     0095                     WPU             equ	149	;# 
   110     0096                     IOC             equ	150	;# 
   111     0096                     IOCB            equ	150	;# 
   112     0099                     VRCON           equ	153	;# 
   113     009A                     EEDATA          equ	154	;# 
   114     009A                     EEDAT           equ	154	;# 
   115     009B                     EEADR           equ	155	;# 
   116     009C                     EECON1          equ	156	;# 
   117     009D                     EECON2          equ	157	;# 
   118     009E                     ADRESL          equ	158	;# 
   119     009F                     ANSEL           equ	159	;# 
   120     000B                     _INTCONbits     set	11
   121     0005                     _GPIO           set	5
   122     0019                     _CMCON          set	25
   123     0028                     _GP0            set	40
   124     0085                     _TRISIO         set	133
   125     009F                     _ANSEL          set	159
   126                           
   127                           	psect	cinit
   128     000C                     start_initialization:	
   129                           ; #config settings
   130                           
   131     000C                     __initialization:
   132                           
   133                           ; Clear objects allocated to BANK0
   134     000C  1283               	bcf	3,5	;RP0=0, select bank0
   135     000D  01A3               	clrf	__pbssBANK0& (0+127)
   136     000E                     end_of_initialization:	
   137                           ;End of C runtime variable initialization code
   138                           
   139     000E                     __end_of__initialization:
   140     000E  0183               	clrf	3
   141     000F  2827               	ljmp	_main	;jump to C main() function
   142                           
   143                           	psect	bssBANK0
   144     0023                     __pbssBANK0:
   145     0023                     _last_gpio:
   146     0023                     	ds	1
   147                           
   148                           	psect	cstackCOMMON
   149     0000                     __pcstackCOMMON:
   150     0000                     ??_main:
   151                           
   152                           	psect	cstackBANK0
   153     0020                     __pcstackBANK0:	
   154                           ; 1 bytes @ 0x0
   155                           
   156     0020                     ?_main:
   157     0020                     ?_isr:	
   158                           ; 1 bytes @ 0x0
   159                           
   160     0020                     ??_isr:	
   161                           ; 1 bytes @ 0x0
   162                           
   163                           
   164                           ; 1 bytes @ 0x0
   165     0020                     	ds	2
   166     0022                     isr@changed:
   167                           
   168                           ; 1 bytes @ 0x2
   169     0022                     	ds	1
   170                           
   171                           	psect	maintext
   172     0027                     __pmaintext:	
   173 ;;
   174 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   175 ;;
   176 ;; *************** function _main *****************
   177 ;; Defined at:
   178 ;;		line 14 in file "main.c"
   179 ;; Parameters:    Size  Location     Type
   180 ;;		None
   181 ;; Auto vars:     Size  Location     Type
   182 ;;		None
   183 ;; Return value:  Size  Location     Type
   184 ;;                  1    wreg      void 
   185 ;; Registers used:
   186 ;;		wreg, status,2
   187 ;; Tracked objects:
   188 ;;		On entry : B00/0
   189 ;;		On exit  : 0/0
   190 ;;		Unchanged: 0/0
   191 ;; Data sizes:     COMMON   BANK0
   192 ;;      Params:         0       0
   193 ;;      Locals:         0       0
   194 ;;      Temps:          0       0
   195 ;;      Totals:         0       0
   196 ;;Total ram usage:        0 bytes
   197 ;; Hardware stack levels required when called: 1
   198 ;; This function calls:
   199 ;;		Nothing
   200 ;; This function is called by:
   201 ;;		Startup code after reset
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205     0027                     _main:	
   206                           ;psect for function _main
   207                           
   208     0027                     l599:	
   209                           ;incstack = 0
   210                           ; Regs used in _main: [wreg+status,2]
   211                           
   212                           
   213                           ;main.c: 15:     CMCON = 0x07;
   214     0027  3007               	movlw	7
   215     0028  1283               	bcf	3,5	;RP0=0, select bank0
   216     0029  0099               	movwf	25	;volatile
   217     002A                     l601:
   218                           
   219                           ;main.c: 16:     ANSEL = 0x0;
   220     002A  1683               	bsf	3,5	;RP0=1, select bank1
   221     002B  019F               	clrf	31	;volatile
   222     002C                     l603:
   223                           
   224                           ;main.c: 17:     TRISIO = 0b00001010;
   225     002C  300A               	movlw	10
   226     002D  0085               	movwf	5	;volatile
   227                           
   228                           ;main.c: 18:     GPIO = 0x00;
   229     002E  1283               	bcf	3,5	;RP0=0, select bank0
   230     002F  0185               	clrf	5	;volatile
   231     0030                     l605:
   232                           
   233                           ;main.c: 19:     GP0 = 0;
   234     0030  1005               	bcf	5,0	;volatile
   235     0031                     l607:
   236                           
   237                           ;main.c: 21:     last_gpio = GPIO;
   238     0031  0805               	movf	5,w	;volatile
   239     0032  00A3               	movwf	_last_gpio	;volatile
   240     0033                     l609:
   241                           
   242                           ;main.c: 23:     INTCONbits.GPIE = 1;
   243     0033  158B               	bsf	11,3	;volatile
   244     0034                     l611:
   245                           
   246                           ;main.c: 24:     INTCONbits.GIE = 1;
   247     0034  178B               	bsf	11,7	;volatile
   248     0035                     l613:
   249                           
   250                           ;main.c: 25:     INTCONbits.PEIE = 1;
   251     0035  170B               	bsf	11,6	;volatile
   252     0036                     l19:	
   253                           ;main.c: 27:     while (1) {
   254                           
   255     0036                     l20:	
   256                           ;main.c: 29:     }
   257                           
   258     0036  2836               	goto	l19
   259     0037  280B               	ljmp	start
   260     0038                     __end_of_main:
   261                           
   262                           	psect	text1
   263     0010                     __ptext1:	
   264 ;; *************** function _isr *****************
   265 ;; Defined at:
   266 ;;		line 32 in file "main.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;  changed         1    2[BANK0 ] unsigned char 
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, status,2, status,0
   275 ;; Tracked objects:
   276 ;;		On entry : 0/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMMON   BANK0
   280 ;;      Params:         0       0
   281 ;;      Locals:         0       1
   282 ;;      Temps:          0       2
   283 ;;      Totals:         0       3
   284 ;;Total ram usage:        3 bytes
   285 ;; Hardware stack levels used: 1
   286 ;; This function calls:
   287 ;;		Nothing
   288 ;; This function is called by:
   289 ;;		Interrupt level 1
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293     0010                     _isr:	
   294                           ;psect for function _isr
   295                           
   296     0010                     i1l615:
   297                           
   298                           ;main.c: 33:     if (INTCONbits.GPIF) {
   299     0010  1C0B               	btfss	11,0	;volatile
   300     0011  2813               	goto	u3_21
   301     0012  2814               	goto	u3_20
   302     0013                     u3_21:
   303     0013  2820               	goto	i1l29
   304     0014                     u3_20:
   305     0014                     i1l617:
   306                           
   307                           ;main.c: 34:         unsigned char changed = GPIO ^ last_gpio;
   308     0014  0805               	movf	5,w	;volatile
   309     0015  0623               	xorwf	_last_gpio,w	;volatile
   310     0016  00A2               	movwf	isr@changed
   311     0017                     i1l619:
   312                           
   313                           ;main.c: 36:         if (changed & 0b00001000) {
   314     0017  1DA2               	btfss	isr@changed,3
   315     0018  281A               	goto	u4_21
   316     0019  281B               	goto	u4_20
   317     001A                     u4_21:
   318     001A  281D               	goto	i1l28
   319     001B                     u4_20:
   320     001B                     i1l621:
   321                           
   322                           ;main.c: 37:             GP0 = !GP0;
   323     001B  3001               	movlw	1
   324     001C  0685               	xorwf	5,f
   325     001D                     i1l28:	
   326                           ;main.c: 38:         }
   327                           
   328                           
   329                           ;main.c: 40:         last_gpio = GPIO;
   330     001D  0805               	movf	5,w	;volatile
   331     001E  00A3               	movwf	_last_gpio	;volatile
   332     001F                     i1l623:
   333                           
   334                           ;main.c: 41:         INTCONbits.GPIF = 0;
   335     001F  100B               	bcf	11,0	;volatile
   336     0020                     i1l29:
   337     0020  0821               	movf	??_isr+1,w
   338     0021  008A               	movwf	10
   339     0022  0E20               	swapf	??_isr,w
   340     0023  0083               	movwf	3
   341     0024  0EDE               	swapf	btemp,f
   342     0025  0E5E               	swapf	btemp,w
   343     0026  0009               	retfie
   344     0027                     __end_of_isr:
   345     0000                     ___latbits      equ	0
   346     005E                     btemp           set	94	;btemp
   347     005E                     wtemp0          set	94
   348                           
   349                           	psect	intentry
   350     0004                     __pintentry:	
   351                           ;incstack = 0
   352                           ; Regs used in _isr: [wreg+status,2+status,0]
   353                           
   354     0004                     interrupt_function:
   355     005E                     saved_w         set	btemp
   356     0004  00DE               	movwf	btemp
   357     0005  0E03               	swapf	3,w
   358     0006  1283               	bcf	3,5	;RP0=0, select bank0
   359     0007  00A0               	movwf	??_isr
   360     0008  080A               	movf	10,w
   361     0009  00A1               	movwf	??_isr+1
   362     000A  2810               	ljmp	_isr
   363                           
   364                           	psect	config
   365                           
   366                           ;Config register CONFIG @ 0x2007
   367                           ;	Oscillator Selection bits
   368                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
   369                           ;	Watchdog Timer Enable bit
   370                           ;	WDTE = OFF, WDT disabled
   371                           ;	Power-Up Timer Enable bit
   372                           ;	PWRTE = ON, PWRT enabled
   373                           ;	GP3/MCLR pin function select
   374                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
   375                           ;	Brown-out Detect Enable bit
   376                           ;	BOREN = OFF, BOD disabled
   377                           ;	Code Protection bit
   378                           ;	CP = OFF, Program Memory code protection is disabled
   379                           ;	Data Code Protection bit
   380                           ;	CPD = OFF, Data memory code protection is disabled
   381     2007                     	org	8199
   382     2007  3184               	dw	12676

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      3       4

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  3     3      0      23
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON            0      0       0      0.0%
BITBANK0            62      0       0      0.0%
COMMON               0      0       0      0.0%
BANK0               62      3       4      6.5%
STACK                0      0       0      0.0%
DATA                 0      0       4      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Jun 04 15:02:53 2025

                     l20 0036                       l19 0036                      l601 002A  
                    l611 0034                      l603 002C                      l613 0035  
                    l605 0030                      l607 0031                      l609 0033  
                    l599 0027                      _GP0 0028                      _isr 0010  
                   ?_isr 0020                     _GPIO 0005                     i1l28 001D  
                   i1l29 0020                     u3_20 0014                     u3_21 0013  
                   u4_20 001B                     u4_21 001A                     _main 0027  
                   btemp 005E                     start 000B                    ??_isr 0020  
                  ?_main 0020                    _CMCON 0019                    _ANSEL 009F  
                  i1l621 001B                    i1l623 001F                    i1l615 0010  
                  i1l617 0014                    i1l619 0017                    pclath 000A  
                  status 0003                    wtemp0 005E          __initialization 000C  
           __end_of_main 0038                   ??_main 0000                   _TRISIO 0085  
                 saved_w 005E  __end_of__initialization 000E           __pcstackCOMMON 0000  
             __pbssBANK0 0023               __pmaintext 0027               __pintentry 0004  
                __ptext1 0010     end_of_initialization 000E      start_initialization 000C  
            __end_of_isr 0027               isr@changed 0022                ___latbits 0000  
          __pcstackBANK0 0020                _last_gpio 0023        interrupt_function 0004  
             _INTCONbits 000B                 intlevel1 0000  
